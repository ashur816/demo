简单工厂模式：工厂类一般是使用静态方法，通过接收的参数的不同来返回不同的对象实例，用来生产同一等级结构中的任意产品。（对于增加新的产品，无能为力）
工厂方法模式：是针对每一种产品提供一个工厂类，通过不同的工厂实例来创建不同的产品实例，用来生产同一等级结构中的固定产品。（支持增加任意产品）
抽象工厂模式：是应对产品族概念的，比如说，每个汽车公司可能要同时生产轿车，货车，客车，那么每一个工厂都要有创建轿车，货车和客车的方法。应对产品族概念而生，增加新的产品线很容易，但是无法增加新的产品。
    用来生产不同产品族的全部产品。（对于增加新的产品，无能为力；支持增加产品族）。


桥接模式(Bridge Pattern)：将抽象部分与它的实现部分分离，使它们都可以独立地变化。它是一种对象结构型模式，又称为柄体(Handle and Body)模式或接口(Interface)模式。
自有方法（抽象+子类实现），关联对象(设置到抽象父类中)
对于毛笔而言，由于型号是其固有的维度，因此可以设计一个抽象的毛笔类，在该类中声明并部分实现毛笔的业务方法，而将各种型号的毛笔作为其子类；
颜色是毛笔的另一个维度，由于它与毛笔之间存在一种“设置”的关系，因此我们可以提供一个抽象的颜色接口，而将具体的颜色作为实现该接口的子类。
在此，型号可认为是毛笔的抽象部分，而颜色是毛笔的实现部分